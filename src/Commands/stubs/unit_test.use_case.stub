<?php

declare(strict_types=1);

namespace DummyNamespace;

use DummyOutputBoundaryNamespace\DummyClass as OutputBoundary;
use DummyInputDataNamespace\DummyClass as InputData;
use DummyOutputDataNamespace\DummyClass as OutputData;
use DummyUseCaseNamespace\DummyClass as UseCase;
use App\Domain\ViewModel;
use PHPUnit\Framework\TestCase;

class DummyClassTest extends TestCase
{
    /**
     * @var \Prophecy\Prophecy\ObjectProphecy
     */
    private $output;

    /**
     * @var UseCase
     */
    private $useCase;

    /**
     * @var \Prophecy\Prophecy\ObjectProphecy
     */
    private $viewModel;

    protected function setUp()
    {
        $this->viewModel = $this->prophesize(ViewModel::class);
        $this->output = $this->prophesize(OutputBoundary::class);
        $this->useCase = new UseCase($this->output->reveal());
    }

    public function testEnsureIsDone()
    {
        $this->output->done(new OutputData())->willReturn($this->viewModel->reveal());

        $this->useCase->do(new InputData());

        $this->output->done(new OutputData())->shouldHaveBeenCalled();
    }
}
